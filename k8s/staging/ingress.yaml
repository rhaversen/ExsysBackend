apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: backend-ingress
    namespace: exsys-staging
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-staging
        # WebSocket support
        nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
        nginx.ingress.kubernetes.io/upgrade: "websocket"
        nginx.ingress.kubernetes.io/connection: "upgrade"
        # Timeout settings (ensure they exceed Socket.IO's defaults)
        nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
        # Sticky sessions based on client IP
        nginx.ingress.kubernetes.io/configuration-snippet: |
            set $forwarded_client_ip "";
            if ($http_x_forwarded_for ~ "^([^,]+)") {
            set $forwarded_client_ip $1;
            }
            set $client_ip $remote_addr;
            if ($forwarded_client_ip != "") {
            set $client_ip $forwarded_client_ip;
            }
        nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
spec:
    ingressClassName: nginx
    tls:
        -   hosts:
                - staging.kantine.nyskivehus.dk
            secretName: backend-tls
    rules:
        -   host: staging.kantine.nyskivehus.dk
            http:
                paths:
                    # API Path
                    -   path: /api/
                        pathType: Prefix
                        backend:
                            service:
                                name: backend-service
                                port:
                                    number: 80
                    # Websocket Path
                    -   path: /socket.io/
                        pathType: Prefix
                        backend:
                            service:
                                name: backend-service
                                port:
                                    number: 80
